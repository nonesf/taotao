<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--定义事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--通知，事务管理策略 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--事务的传播行为-->
        <tx:attributes>
            <!--所有已query开头的方法都是只读的-->
            <tx:method name="query*" read-only="true"/>
            <!--其他方法使用默认事务策略，遇到异常回滚-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--配置切面-->
    <aop:config>
        <!--pointcut元素定义一个切入点，execution中的第一个*用以匹配方法的返回类型，
        *代表所有返回类型， com.itcat.dao.*.*(..)表明匹配包下所有的方法
        -->
        <aop:pointcut id="myPointcut" expression="execution(* com.taotao.manage.service..*.*(..))"/>
        <!--将定义好的事务处理策略应用到上述切入点-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>
    </aop:config>
</beans>